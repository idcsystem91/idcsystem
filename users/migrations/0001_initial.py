# Generated by Django 4.0.6 on 2022-07-26 05:26

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email_address')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('e_name', models.CharField(max_length=20, verbose_name='英語表記')),
                ('sort_no', models.IntegerField(verbose_name='表示順番')),
            ],
            options={
                'verbose_name': 'エリア',
                'verbose_name_plural': 'エリア',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('e_name', models.CharField(max_length=20, verbose_name='英語表記')),
                ('sort_no', models.IntegerField(verbose_name='表示順番')),
            ],
            options={
                'verbose_name': '職種',
                'verbose_name_plural': '職種',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('sort_no', models.IntegerField(verbose_name='表示順番')),
                ('area', models.ManyToManyField(related_name='area', to='users.area', verbose_name='エリア')),
            ],
            options={
                'verbose_name': '事務所',
                'verbose_name_plural': '事務所',
            },
        ),
        migrations.CreateModel(
            name='PhoneType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='携帯電話種別')),
            ],
            options={
                'verbose_name': '携帯種別',
                'verbose_name_plural': '携帯種別',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='性')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='名')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生年月日')),
                ('phone', models.CharField(blank=True, max_length=13, verbose_name='携帯番号')),
                ('default_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.area', verbose_name='メインエリア')),
                ('default_job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.job', verbose_name='メイン職種')),
                ('office', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.office', verbose_name='事務所')),
                ('phone_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.phonetype', verbose_name='携帯種別')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'プロフィール',
                'verbose_name_plural': 'プロフィール',
            },
        ),
    ]
